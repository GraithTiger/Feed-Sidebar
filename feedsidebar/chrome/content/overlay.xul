<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE overlay SYSTEM "chrome://feedbar/locale/locale.dtd">
<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	<script type="application/x-javascript">
		<![CDATA[
		
		var FEEDBAR_STORE = [];
		
		window.addEventListener("unload", function (event) { try {  Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService).getBranch("extensions.feedbar.").setIntPref("lastUpdate", 0); } catch (ex) { } }, false);
		
		window.addEventListener("load", 
			function (event) { 
				var prefs = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService).getBranch("extensions.feedbar.");
				
				if (prefs.getBoolPref("firstRun")) {
					// Add the toolbar button.
					
					var buttonId = "feedbar-button";
					
					if (!document.getElementById(buttonId)){

						// Determine which toolbar to place the icon onto
						if (document.getElementById("nav-bar").getAttribute("collapsed") != "true"){
							var toolbar = document.getElementById("nav-bar");
						}
						else {
							var toolbar = document.getElementById("toolbar-menubar");
						}

						var currentSet = toolbar.currentSet;
						var newSet = currentSet;
						var setItems = currentSet.split(',');

						var toolbox = document.getElementById("navigator-toolbox");
						var toolboxDocument = toolbox.ownerDocument;

						function getIndex(array, val){
							for (var i = 0; i < array.length; i++){
								if (array[i] == val) {
									return i;
								}
							}

							return -1;
						}

						// Order of adding:
							// before urlbar-container
							// after home-button
							// after reload-button
							// after stop-button
							// after forward-button
							// before search-container
							// at the end

						if (getIndex(setItems, "urlbar-container") != -1){
							newSet = currentSet.replace("urlbar-container",buttonId+",urlbar-container");
						}
						else if (getIndex(setItems, "home-button") != -1){
							newSet = currentSet.replace("home-button","home-button,"+buttonId);
						}
						else if (getIndex(setItems, "reload-button") != -1){
							newSet = currentSet.replace("reload-button","reload-button,"+buttonId);
						}
						else if (getIndex(setItems, "stop-button") != -1){
							newSet = currentSet.replace("stop-button","stop-button,"+buttonId);
						}
						else if (getIndex(setItems, "forward-button") != -1){
							newSet = currentSet.replace("forward-button","forward-button,"+buttonId);
						}
						else if (getIndex(setItems, "search-container") != -1){
							newSet = currentSet.replace("search-container",buttonId+",search-container");
						}
						else {
							newSet = toolbar.currentSet + ","+buttonId;
						}

						toolbar.currentSet = newSet;
						toolbar.setAttribute("currentset",newSet);

						toolboxDocument.persist(toolbar.id, "currentset");

						try {
							BrowserToolboxCustomizeDone(true);
						} catch (e) { }
					}
				
					// Open the sidebar.
					toggleSidebar('feedbar');
					prefs.setBoolPref("firstRun", false);
				} 
			},
			false);
		
		]]>
	</script>
	<toolbarpalette id="BrowserToolbarPalette">
        <toolbarbutton id="feedbar-button" class="toolbarbutton-1 chromeclass-toolbar-additional"
                       observes="feedbar"
                       label="&feedbar.buttonLabel;"
                       tooltiptext="&feedbar.buttonTooltip;" />
	</toolbarpalette>
	<broadcasterset id="mainBroadcasterSet">
		<broadcaster id="feedbar"
			autoCheck="false"
			label="&feedbar.buttonLabel;"
			type="checkbox" 
			group="sidebar"
			sidebartitle="&feedbar.sidebarTitle;"
		    sidebarurl="chrome://feedbar/content/sidebar.xul"
			acceltext="Ctrl+Shift+&feedbar.accesskey;"
			oncommand="toggleSidebar('feedbar');"/>
	</broadcasterset>
	<menupopup id="viewSidebarMenu">
		<menuitem
			key="feedbar_key"
			accesskey="&feedbar.accesskey;"
			observes="feedbar"/>
	</menupopup>
	<keyset id="mainKeyset">
		<key id="feedbar_key"
			key="&feedbar.accesskey;"
			command="feedbar"
			modifiers="accel shift" />
	</keyset>
</overlay>